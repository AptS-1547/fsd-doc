{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome! Welcome to the unofficial documentation of FSD, the protocol behind the IVAO and VATSIM online networks. This documentation was created during the reverse engineering process for FCOM , which forwards messages to a web server. FCOM's implementation of this server forwards it over Discord DM, but it's entirely possible to write a server that does anything it wants (which may or may not involve forwarding) with the forwarded messages. Note: information may change as new information regarding FSD is discovered. This document is currently heavily focused on VATSIM's implementation (which is much \"heavier\" than IVAO's), but this will change in the future as I figure out which parts are unique to either network. Generating the documentation The documentation is written in Markdown. To generate webpages with this documentation, use the Python tool MkDocs . It can be installed via pip : pip install mkdocs cd fsd-doc Preview To generate a live \"preview\" version that auto-refreshes whenever one of the Markdown files is updated: mkdocs serve Building the site To finalize everything into HTML pages: mkdocs build Watching FSD in action To see FSD in action, use Wireshark to monitor traffic on TCP port 6809. Here's a tutorial to get started. As is the case with anything on the application layer that's in plaintext, FSD can be interacted with over Telnet: telnet (server address) 6809 IVAO uses eu*.ivan.ivao.aero (replace * with the server number). A list of servers can be found at heartbeat.ivao.aero . VATSIM uses static IPs. These IPs can be found at any of the URLs starting with url1 at status.vatsim.net . As of the time of writing, two mirrors are available ( hardern.net , vroute.net ) Contributing Have something you'd like to add to the documentation? Just fork and create a pull request on the GitHub repository .","title":"Home"},{"location":"#welcome","text":"Welcome to the unofficial documentation of FSD, the protocol behind the IVAO and VATSIM online networks. This documentation was created during the reverse engineering process for FCOM , which forwards messages to a web server. FCOM's implementation of this server forwards it over Discord DM, but it's entirely possible to write a server that does anything it wants (which may or may not involve forwarding) with the forwarded messages. Note: information may change as new information regarding FSD is discovered. This document is currently heavily focused on VATSIM's implementation (which is much \"heavier\" than IVAO's), but this will change in the future as I figure out which parts are unique to either network.","title":"Welcome!"},{"location":"#generating-the-documentation","text":"The documentation is written in Markdown. To generate webpages with this documentation, use the Python tool MkDocs . It can be installed via pip : pip install mkdocs cd fsd-doc","title":"Generating the documentation"},{"location":"#preview","text":"To generate a live \"preview\" version that auto-refreshes whenever one of the Markdown files is updated: mkdocs serve","title":"Preview"},{"location":"#building-the-site","text":"To finalize everything into HTML pages: mkdocs build","title":"Building the site"},{"location":"#watching-fsd-in-action","text":"To see FSD in action, use Wireshark to monitor traffic on TCP port 6809. Here's a tutorial to get started. As is the case with anything on the application layer that's in plaintext, FSD can be interacted with over Telnet: telnet (server address) 6809 IVAO uses eu*.ivan.ivao.aero (replace * with the server number). A list of servers can be found at heartbeat.ivao.aero . VATSIM uses static IPs. These IPs can be found at any of the URLs starting with url1 at status.vatsim.net . As of the time of writing, two mirrors are available ( hardern.net , vroute.net )","title":"Watching FSD in action"},{"location":"#contributing","text":"Have something you'd like to add to the documentation? Just fork and create a pull request on the GitHub repository .","title":"Contributing"},{"location":"api/addclients/","text":"Adding and removing clients While the presence (or absence) of client update packets (see \"Positon updates\" under \"Requesting and sending information\") will signify the presence (or lack thereof) of a client, the server will also send a special packet signaling the addition/removal of said client, whether this is due to client disconnecting or falling out of visibility range. The following commands are also used to login/logoff the client itself. Adding clients It is unknown as to what 100 represents, but it appears that all clients share the same value. ATC #AA(callsign):SERVER:(real name):(network ID)::(rating):(protocol version) Pilots #AP(callsign):SERVER:(network ID)::1:(protocol version):(rating):(real name ICAO) Removing clients ATC #DA(callsign):(network ID) Pilots #DP(callsign):(network ID)","title":"Adding/removing clients"},{"location":"api/addclients/#adding-and-removing-clients","text":"While the presence (or absence) of client update packets (see \"Positon updates\" under \"Requesting and sending information\") will signify the presence (or lack thereof) of a client, the server will also send a special packet signaling the addition/removal of said client, whether this is due to client disconnecting or falling out of visibility range. The following commands are also used to login/logoff the client itself.","title":"Adding and removing clients"},{"location":"api/addclients/#adding-clients","text":"It is unknown as to what 100 represents, but it appears that all clients share the same value.","title":"Adding clients"},{"location":"api/addclients/#atc","text":"#AA(callsign):SERVER:(real name):(network ID)::(rating):(protocol version)","title":"ATC"},{"location":"api/addclients/#pilots","text":"#AP(callsign):SERVER:(network ID)::1:(protocol version):(rating):(real name ICAO)","title":"Pilots"},{"location":"api/addclients/#removing-clients","text":"","title":"Removing clients"},{"location":"api/addclients/#atc_1","text":"#DA(callsign):(network ID)","title":"ATC"},{"location":"api/addclients/#pilots_1","text":"#DP(callsign):(network ID)","title":"Pilots"},{"location":"api/connect/","text":"Connecting to a FSD server Pre-login identification (VATSIM only) Note: IVAO does not implement this form of identification. The client initiates communication after the TCP connection is established (see the \"Login\" section). Server Once the connection is established, the server identifies itself using the $DI prefix: $DISERVER:CLIENT:VATSIM FSD V3.13:(token) (token) is a 22-character hexadecimal string that changes on every login. The mechanism behind its generation is unknown. Client The client must then identify itself using the $ID prefix before continuing: $ID(callsign):SERVER:(client id):(client string):3:2:(network ID):(num) Field Description (callsign) The callsign to log in as. (client id) A 4-character hexadecimal string that identifies the client. See next subsection for details. (client string) A human-readable string that identifies the client in use. (network ID) VATSIM CID. (num) A user-unique signed 9-digit number. It is unclear if it is linked to the client's hardware. Client ID and string VATSIM servers appear to contain a whitelist of client IDs. Connections using non-whitelisted client IDs will be closed by the server: $ERserver:unknown:016::Unauthorized client software The client string is not used by the server to identify the client software. It is merely a human-readable string for readability purposes. The following are a list of known client IDs: Client ID Client string 69d7 EuroScope 3.2 88e4 vPilot 48e2 Swift de1e VRC Login The format varies slightly between pilots and ATC: ATC #AA(callsign):SERVER:(full name):(network ID):(password):(num1):(protocol version) The meaning of the following fields is unclear: Field Examples Possible meaning (num1) 1 , 12 ATC rating Pilot #AP(callsign):SERVER:(network ID):(password):(num1):(protocol version):(num2):(full name ICAO) The meaning of the following fields is unclear: Field Examples Possible meaning (num1) 1 , 11 Pilot rating (num2) 2 , 30 Unknown Post-login Message of the Day If the login is successful, the server returns a pre-defined message, encoded as private messages sent from SERVER . IVAO #TMSERVER:(callsign):IVAO FSD Server B.06k - (c)1996-2016 Filip Jonckers, Kenny Moens, Ken Andries - limited license, usage granted to International Virtual Aviation Organisation VZW #TMSERVER:(callsign):Welcome to the IVAO - Europe (a) - Network Server #TMSERVER:(callsign):Please visit www.ivao.aero for further info. #TMSERVER:(callsign):You are now online and connected, have fun. #TMSERVER:(callsign):You are (b) Field Information (a) IVAO server number (e.g. 4 for EU4) (b) User's ATC or Pilot rating; e.g. Pilot Rating FS3 , ATC Rating AS3 VATSIM #TMserver:(callsign):By using your VATSIM assigned identification number on this server you #TMserver:(callsign):hereby agree to the terms of the VATSIM Code of Regulations and the #TMserver:(callsign):VATSIM User Agreement and the VATSIM Code of Conduct which may be viewed #TMserver:(callsign):at http://www.vatsim.net/network/docs/ #TMserver:(callsign):All logins are tracked and identification numbers are recorded. #TMserver:(callsign):Users must enter their real full first names and surnames when logging #TMserver:(callsign):onto any of the VATSIM.net servers. Post-login setup IVAO The client then provides information to the server about itself: !C(callsign):SERVER:(rating):(num1):(client):(client version):(num2) Field Description (callsign) User's callsign. (rating) User's rating, as an integer (see \"Terms Used\" under \"Introduction\") (num1) Unknown. (client) Name of the client; e.g. IvAp . (client version) Client version; e.g. 2.0.2 (num2) Unknown. The server replies with some information about the client: !RSERVER:(callsign):(rating):(num1):(rating):(num2):(client IP address) The meaning of (num1) and (num2) is unclear. They are different from (num1) and (num2) in the packet sent before this response. ATC Prior to the above-mentioned !C packet, ATC clients provide an additional packet on the controller's airfield: &D(callsign):SERVER:0:(airport ICAO) Pilot After the !C packet, the client sends some additional info: $NV(callsign):SERVER:(callsign):1 -PD(callsign):SERVER:(MTL model name) -MD(callsign):SERVER:13 &R(callsign):SERVER:0 -RF(callsign):SERVER:3:3 The meaning of the trailing numbers is unclear. VATSIM The server requests information on the client's capabilities: ATC Server request: $CQSERVER:(callsign):CAPS $CRSERVER:(callsign):ATC:N:(callsign) $CRSERVER:(callsign):CAPS:ATCINFO=1:SECPOS=1 $CRSERVER:(callsign):IP:(client IP address) The N on the second line may indicate the server indicating that the client is not providing ATC services. Client response: $CR(callsign):SERVER:CAPS:ATCINFO=1:SECPOS=1:MODELDESC=1:ONGOINGCOORD=1 Pilot Server request: $CQSERVER:(callsign):CAPS $CRSERVER:(callsign):IP:(client IP address) $ERserver:(callsign):008:(callsign):No flightplan Client response: $CR(callsign):SERVER:CAPS:VERSION=1:ATCINFO=1:MODELDESC=1:ACCONFIG=1","title":"Connecting"},{"location":"api/connect/#connecting-to-a-fsd-server","text":"","title":"Connecting to a FSD server"},{"location":"api/connect/#pre-login-identification-vatsim-only","text":"Note: IVAO does not implement this form of identification. The client initiates communication after the TCP connection is established (see the \"Login\" section).","title":"Pre-login identification (VATSIM only)"},{"location":"api/connect/#server","text":"Once the connection is established, the server identifies itself using the $DI prefix: $DISERVER:CLIENT:VATSIM FSD V3.13:(token) (token) is a 22-character hexadecimal string that changes on every login. The mechanism behind its generation is unknown.","title":"Server"},{"location":"api/connect/#client","text":"The client must then identify itself using the $ID prefix before continuing: $ID(callsign):SERVER:(client id):(client string):3:2:(network ID):(num) Field Description (callsign) The callsign to log in as. (client id) A 4-character hexadecimal string that identifies the client. See next subsection for details. (client string) A human-readable string that identifies the client in use. (network ID) VATSIM CID. (num) A user-unique signed 9-digit number. It is unclear if it is linked to the client's hardware.","title":"Client"},{"location":"api/connect/#client-id-and-string","text":"VATSIM servers appear to contain a whitelist of client IDs. Connections using non-whitelisted client IDs will be closed by the server: $ERserver:unknown:016::Unauthorized client software The client string is not used by the server to identify the client software. It is merely a human-readable string for readability purposes. The following are a list of known client IDs: Client ID Client string 69d7 EuroScope 3.2 88e4 vPilot 48e2 Swift de1e VRC","title":"Client ID and string"},{"location":"api/connect/#login","text":"The format varies slightly between pilots and ATC:","title":"Login"},{"location":"api/connect/#atc","text":"#AA(callsign):SERVER:(full name):(network ID):(password):(num1):(protocol version) The meaning of the following fields is unclear: Field Examples Possible meaning (num1) 1 , 12 ATC rating","title":"ATC"},{"location":"api/connect/#pilot","text":"#AP(callsign):SERVER:(network ID):(password):(num1):(protocol version):(num2):(full name ICAO) The meaning of the following fields is unclear: Field Examples Possible meaning (num1) 1 , 11 Pilot rating (num2) 2 , 30 Unknown","title":"Pilot"},{"location":"api/connect/#post-login","text":"","title":"Post-login"},{"location":"api/connect/#message-of-the-day","text":"If the login is successful, the server returns a pre-defined message, encoded as private messages sent from SERVER .","title":"Message of the Day"},{"location":"api/connect/#ivao","text":"#TMSERVER:(callsign):IVAO FSD Server B.06k - (c)1996-2016 Filip Jonckers, Kenny Moens, Ken Andries - limited license, usage granted to International Virtual Aviation Organisation VZW #TMSERVER:(callsign):Welcome to the IVAO - Europe (a) - Network Server #TMSERVER:(callsign):Please visit www.ivao.aero for further info. #TMSERVER:(callsign):You are now online and connected, have fun. #TMSERVER:(callsign):You are (b) Field Information (a) IVAO server number (e.g. 4 for EU4) (b) User's ATC or Pilot rating; e.g. Pilot Rating FS3 , ATC Rating AS3","title":"IVAO"},{"location":"api/connect/#vatsim","text":"#TMserver:(callsign):By using your VATSIM assigned identification number on this server you #TMserver:(callsign):hereby agree to the terms of the VATSIM Code of Regulations and the #TMserver:(callsign):VATSIM User Agreement and the VATSIM Code of Conduct which may be viewed #TMserver:(callsign):at http://www.vatsim.net/network/docs/ #TMserver:(callsign):All logins are tracked and identification numbers are recorded. #TMserver:(callsign):Users must enter their real full first names and surnames when logging #TMserver:(callsign):onto any of the VATSIM.net servers.","title":"VATSIM"},{"location":"api/connect/#post-login-setup","text":"","title":"Post-login setup"},{"location":"api/connect/#ivao_1","text":"The client then provides information to the server about itself: !C(callsign):SERVER:(rating):(num1):(client):(client version):(num2) Field Description (callsign) User's callsign. (rating) User's rating, as an integer (see \"Terms Used\" under \"Introduction\") (num1) Unknown. (client) Name of the client; e.g. IvAp . (client version) Client version; e.g. 2.0.2 (num2) Unknown. The server replies with some information about the client: !RSERVER:(callsign):(rating):(num1):(rating):(num2):(client IP address) The meaning of (num1) and (num2) is unclear. They are different from (num1) and (num2) in the packet sent before this response.","title":"IVAO"},{"location":"api/connect/#atc_1","text":"Prior to the above-mentioned !C packet, ATC clients provide an additional packet on the controller's airfield: &D(callsign):SERVER:0:(airport ICAO)","title":"ATC"},{"location":"api/connect/#pilot_1","text":"After the !C packet, the client sends some additional info: $NV(callsign):SERVER:(callsign):1 -PD(callsign):SERVER:(MTL model name) -MD(callsign):SERVER:13 &R(callsign):SERVER:0 -RF(callsign):SERVER:3:3 The meaning of the trailing numbers is unclear.","title":"Pilot"},{"location":"api/connect/#vatsim_1","text":"The server requests information on the client's capabilities:","title":"VATSIM"},{"location":"api/connect/#atc_2","text":"Server request: $CQSERVER:(callsign):CAPS $CRSERVER:(callsign):ATC:N:(callsign) $CRSERVER:(callsign):CAPS:ATCINFO=1:SECPOS=1 $CRSERVER:(callsign):IP:(client IP address) The N on the second line may indicate the server indicating that the client is not providing ATC services. Client response: $CR(callsign):SERVER:CAPS:ATCINFO=1:SECPOS=1:MODELDESC=1:ONGOINGCOORD=1","title":"ATC"},{"location":"api/connect/#pilot_2","text":"Server request: $CQSERVER:(callsign):CAPS $CRSERVER:(callsign):IP:(client IP address) $ERserver:(callsign):008:(callsign):No flightplan Client response: $CR(callsign):SERVER:CAPS:VERSION=1:ATCINFO=1:MODELDESC=1:ACCONFIG=1","title":"Pilot"},{"location":"api/info/","text":"Sending and receiving information All requests are prefaced with $CQ . A client may send or receive requests: $CQ(requester):(requestee):(command) Responses follow the format below: $CR(requestee):(requester):(command):(data) Commands ACC - Aircraft configuration (VATSIM only) Returns the current configuration (i.e. flaps, landing gear, lights etc.) of the requested callsign's aircraft. Requests and responses are formatted in JSON. ACC data is received for all aircraft within visibility range, even if not requested. It may also be sent by a client uninitiated at any time (e.g. if the user extends/retracts flaps). In such a case, the ACC packet is addressed to @94836 . IVAO does not appear to have an equivalent command. Note: the formatted fields below contain only the (data) field. Request: {\"request\":\"full\"} All ACC requests from other users contain this exact JSON string . Sample response: For some reason, ACC responses are prefixed with $CQ , and not $CR (as would be expected for a response): { \"config\":{ \"is_full_data\":true, \"lights\":{ \"strobe_on\":false, \"landing_on\":false, \"taxi_on\":true, \"beacon_on\":true, \"nav_on\":true, \"logo_on\":false }, \"engines\":{ \"1\":{ \"on\":true }, \"2\":{ \"on\":true } }, \"gear_down\":false, \"flaps_pct\":0, \"spoilers_out\":false, \"on_ground\":true } } Line breaks have been inserted for readability. They are not present in the actual packets. If the ACC packet is being sent by the client uninitiated, then JSON fields may be omitted as desired. ATIS - ATIS Returns the requested callsign's voice server URL and ATIS message. This is only applicable for ATC stations. Each controller has an \"ATIS\" field associated with it. This field is essentially a user-defined information box. It does not contain the airfield ATIS, unless it belongs to an ATIS station (see below). On VATSIM, actual airfield ATISes are implemented by means of an additional online station with the callsign ICAO_ATIS . Its ATIS field contains the actual ATIS, and a computer-generated voice is broadcast on Its voice channel to simulate voice ATIS. Request: $CQ(requester):(requestee):ATIS Response: $CR(requestee):(requester):ATIS:V:(voice server address, without \"http://\") ... $CR(requestee):(requester):ATIS:T:(line of ATIS text) $CR(requestee):(requester):ATIS:T:(line of ATIS text) ... $CR(requestee):(requester):ATIS:E:(total number of lines, including this line) C? - Tuned frequency [IVAO only] Returns the radio frequency the user is tuned to. Request: $CQ(requestee):(requester):C? Response: $CR(requestee):(requester):C?:(frequency) The frequency is formatted as xxx.yyy (e.g. 122.800) CAPS - Client capabilities Returns a list of the client's capabilities. It is unclear as to what these capabilities are, as pilots and ATC stations appear to return the exact same values. Both clients and SERVER will request CAPS information. Request: $CQ(requestee):(requester):CAPS Response: $CR(requestee):(requester):CAPS:ATCINFO=1:SECPOS=1:MODELDESC=1:ONGOINGCOORD=1 RN - Real name Returns the real name of the user logged in as the requested callsign. Request: $CQ(requester):(requestee):RN Response: ATC: $CR(requestee):(requester):RN:(real name):(ATC sector file):(rating) Pilot: $CR(requestee):(requester):RN:(real name ICAO)::(rating) Server-only commands The following commands are only sent/received by the server. The sending/receiving station is represented as DATA or SERVER : INF - Client system information Request: $CQDATA:(recipient):INF Response: #TM(callsign):DATA:(client string) PID=(CID) ((Real name ICAO)) IP=(IP address) SYS_UID=(uid) FSVER=(sim) LT=(lat) LO=(lon) AL=(alt) SYS_UID is a 9-digit number. It appears to be a negative value. FSVER represents the flight simulator being used (e.g. Prepar3dV3 ). It is left blank (but not omitted) if the client is ATC. LA , LO , and AL appear to be floating-point numbers Text messages All messages are prefixed with #TM : #TM(sender):(recipient):(message contents) If (sender) and (recipient) are online callsigns, then this command acts as a private message. Special recipients The following recipients are treated differently: Recipient Meaning @xxyyy Sends the message over the frequency 1xx.yyy MHz , instead of PM. * Broadcast message, received by everyone on the network. IVAO and VATSIM restrict this functionality to supervisors and administrators, but it is unknown if this is enforced server-side. If (sender) and (recipient) are not online callsigns, then the text message represents additional background functionality that the average user does not see or deal with. It is used by VATSIM to hack in additional functionality (see below), without making major modifications to the protocol. Escaping of message contents VATSIM appears to correctly escape message contents, as including colons in message text does not seem to cause unexpected behaviour. However, this does not seem to be the case in IVAO. To correctly escape colons, use :: as the escape sequence. Flight plan acknowledgement (VATSIM) #TM(own callsign):FP:(flightplan callsign) GET Once the client receives a flight plan, it shall acknowledge it using the above command. The reason for this is unknown. The server will then acknowledge with the following: #PCserver:(own callsign):CCP:BC:(flightplan callsign):0 Server messages #TMserver:(callsign):(message) These are essentially text messages that are sent from a callsign named server . These are usually seen on initial login. Flight plans A pilot may file a flight plan as follows: IVAO IVAO's flightplan format is more detailed, and is based on the ICAO international flight plan [PDF, page 2] . Please refer to IVAO documents [PDF] on what to include in each field. $FP(callsign):SERVER:(VFR/IFR):(acft):(spd):(origin):(sched dep):1000:(crz alt):(dest):(EET):(FOB):0:0::(remarks):(alt airport):S:0: Placeholder details (VFR/IFR) V or I (acft) Aircraft and equipment, in the format #/(model)/(turb)-(equip)/(xpdr) (e.g. 1/B738/M-SDE2E3FGHIRWXY/LB1 ). Please refer to the IVAO documents [PDF] for further details. (spd) Cruising airspeed, in knots. Prefixed with K (km/h) N (knots), or M (Mach). K / N are always 4-digit, and M is 3 digits without the decimal (e.g. M082 = Mach 0.82) (sched dep) Scheduled departure; e.g. 2215 or 10:15pm Z (crz alt) Cruising level. Prefixed with F (flight level in feet), S (metric flight level in x10 metres), A (altitude in x100 feet), M (altitude in x10 metres), or VFR (VFR flight with no specific altitude) (EET) Estimated enroute time; e.g. 1:37 (FOB) Fuel on board; e.g. 2:30 Further clarification is required on some fields. VATSIM VATSIM's flightplan format is simpler, and is based on the FAA domestic flight plan [PDF] . $FP(callsign):*A:(VFR/IFR):(acft type):(spd):(origin):(sched dep):(sched dep):(alt):(dest):(EET):(FOB):(alt airport):(remarks) Placeholder details (VFR/IFR) V or I (acft type ) includes FAA prefixes/suffixes, if present; e.g. H/B77W/L (spd) Ground speed, in knots (sched dep) Scheduled departure; e.g. 2215 or 10:15pm Z (EET) Estimated enroute time; e.g. 1:37 (FOB) Fuel on board; e.g. 2:30 Flight plan packets are sent to all other clients on the server, even if not requested. On VATSIM, once such a packet has been received, the client acknowledges it (see \"Receipt of flight plan (VATSIM)\" under \"Text messages\" on this page).","title":"Sending/receiving info"},{"location":"api/info/#sending-and-receiving-information","text":"All requests are prefaced with $CQ . A client may send or receive requests: $CQ(requester):(requestee):(command) Responses follow the format below: $CR(requestee):(requester):(command):(data)","title":"Sending and receiving information"},{"location":"api/info/#commands","text":"","title":"Commands"},{"location":"api/info/#acc-aircraft-configuration-vatsim-only","text":"Returns the current configuration (i.e. flaps, landing gear, lights etc.) of the requested callsign's aircraft. Requests and responses are formatted in JSON. ACC data is received for all aircraft within visibility range, even if not requested. It may also be sent by a client uninitiated at any time (e.g. if the user extends/retracts flaps). In such a case, the ACC packet is addressed to @94836 . IVAO does not appear to have an equivalent command. Note: the formatted fields below contain only the (data) field. Request: {\"request\":\"full\"} All ACC requests from other users contain this exact JSON string . Sample response: For some reason, ACC responses are prefixed with $CQ , and not $CR (as would be expected for a response): { \"config\":{ \"is_full_data\":true, \"lights\":{ \"strobe_on\":false, \"landing_on\":false, \"taxi_on\":true, \"beacon_on\":true, \"nav_on\":true, \"logo_on\":false }, \"engines\":{ \"1\":{ \"on\":true }, \"2\":{ \"on\":true } }, \"gear_down\":false, \"flaps_pct\":0, \"spoilers_out\":false, \"on_ground\":true } } Line breaks have been inserted for readability. They are not present in the actual packets. If the ACC packet is being sent by the client uninitiated, then JSON fields may be omitted as desired.","title":"ACC - Aircraft configuration (VATSIM only)"},{"location":"api/info/#atis-atis","text":"Returns the requested callsign's voice server URL and ATIS message. This is only applicable for ATC stations. Each controller has an \"ATIS\" field associated with it. This field is essentially a user-defined information box. It does not contain the airfield ATIS, unless it belongs to an ATIS station (see below). On VATSIM, actual airfield ATISes are implemented by means of an additional online station with the callsign ICAO_ATIS . Its ATIS field contains the actual ATIS, and a computer-generated voice is broadcast on Its voice channel to simulate voice ATIS. Request: $CQ(requester):(requestee):ATIS Response: $CR(requestee):(requester):ATIS:V:(voice server address, without \"http://\") ... $CR(requestee):(requester):ATIS:T:(line of ATIS text) $CR(requestee):(requester):ATIS:T:(line of ATIS text) ... $CR(requestee):(requester):ATIS:E:(total number of lines, including this line)","title":"ATIS - ATIS"},{"location":"api/info/#c-tuned-frequency-ivao-only","text":"Returns the radio frequency the user is tuned to. Request: $CQ(requestee):(requester):C? Response: $CR(requestee):(requester):C?:(frequency) The frequency is formatted as xxx.yyy (e.g. 122.800)","title":"C? - Tuned frequency [IVAO only]"},{"location":"api/info/#caps-client-capabilities","text":"Returns a list of the client's capabilities. It is unclear as to what these capabilities are, as pilots and ATC stations appear to return the exact same values. Both clients and SERVER will request CAPS information. Request: $CQ(requestee):(requester):CAPS Response: $CR(requestee):(requester):CAPS:ATCINFO=1:SECPOS=1:MODELDESC=1:ONGOINGCOORD=1","title":"CAPS - Client capabilities"},{"location":"api/info/#rn-real-name","text":"Returns the real name of the user logged in as the requested callsign. Request: $CQ(requester):(requestee):RN Response: ATC: $CR(requestee):(requester):RN:(real name):(ATC sector file):(rating) Pilot: $CR(requestee):(requester):RN:(real name ICAO)::(rating)","title":"RN     -  Real name"},{"location":"api/info/#server-only-commands","text":"The following commands are only sent/received by the server. The sending/receiving station is represented as DATA or SERVER :","title":"Server-only commands"},{"location":"api/info/#inf-client-system-information","text":"Request: $CQDATA:(recipient):INF Response: #TM(callsign):DATA:(client string) PID=(CID) ((Real name ICAO)) IP=(IP address) SYS_UID=(uid) FSVER=(sim) LT=(lat) LO=(lon) AL=(alt) SYS_UID is a 9-digit number. It appears to be a negative value. FSVER represents the flight simulator being used (e.g. Prepar3dV3 ). It is left blank (but not omitted) if the client is ATC. LA , LO , and AL appear to be floating-point numbers","title":"INF - Client system information"},{"location":"api/info/#text-messages","text":"All messages are prefixed with #TM : #TM(sender):(recipient):(message contents) If (sender) and (recipient) are online callsigns, then this command acts as a private message.","title":"Text messages"},{"location":"api/info/#special-recipients","text":"The following recipients are treated differently: Recipient Meaning @xxyyy Sends the message over the frequency 1xx.yyy MHz , instead of PM. * Broadcast message, received by everyone on the network. IVAO and VATSIM restrict this functionality to supervisors and administrators, but it is unknown if this is enforced server-side. If (sender) and (recipient) are not online callsigns, then the text message represents additional background functionality that the average user does not see or deal with. It is used by VATSIM to hack in additional functionality (see below), without making major modifications to the protocol.","title":"Special recipients"},{"location":"api/info/#escaping-of-message-contents","text":"VATSIM appears to correctly escape message contents, as including colons in message text does not seem to cause unexpected behaviour. However, this does not seem to be the case in IVAO. To correctly escape colons, use :: as the escape sequence.","title":"Escaping of message contents"},{"location":"api/info/#flight-plan-acknowledgement-vatsim","text":"#TM(own callsign):FP:(flightplan callsign) GET Once the client receives a flight plan, it shall acknowledge it using the above command. The reason for this is unknown. The server will then acknowledge with the following: #PCserver:(own callsign):CCP:BC:(flightplan callsign):0","title":"Flight plan acknowledgement (VATSIM)"},{"location":"api/info/#server-messages","text":"#TMserver:(callsign):(message) These are essentially text messages that are sent from a callsign named server . These are usually seen on initial login.","title":"Server messages"},{"location":"api/info/#flight-plans","text":"A pilot may file a flight plan as follows:","title":"Flight plans"},{"location":"api/info/#ivao","text":"IVAO's flightplan format is more detailed, and is based on the ICAO international flight plan [PDF, page 2] . Please refer to IVAO documents [PDF] on what to include in each field. $FP(callsign):SERVER:(VFR/IFR):(acft):(spd):(origin):(sched dep):1000:(crz alt):(dest):(EET):(FOB):0:0::(remarks):(alt airport):S:0: Placeholder details (VFR/IFR) V or I (acft) Aircraft and equipment, in the format #/(model)/(turb)-(equip)/(xpdr) (e.g. 1/B738/M-SDE2E3FGHIRWXY/LB1 ). Please refer to the IVAO documents [PDF] for further details. (spd) Cruising airspeed, in knots. Prefixed with K (km/h) N (knots), or M (Mach). K / N are always 4-digit, and M is 3 digits without the decimal (e.g. M082 = Mach 0.82) (sched dep) Scheduled departure; e.g. 2215 or 10:15pm Z (crz alt) Cruising level. Prefixed with F (flight level in feet), S (metric flight level in x10 metres), A (altitude in x100 feet), M (altitude in x10 metres), or VFR (VFR flight with no specific altitude) (EET) Estimated enroute time; e.g. 1:37 (FOB) Fuel on board; e.g. 2:30 Further clarification is required on some fields.","title":"IVAO"},{"location":"api/info/#vatsim","text":"VATSIM's flightplan format is simpler, and is based on the FAA domestic flight plan [PDF] . $FP(callsign):*A:(VFR/IFR):(acft type):(spd):(origin):(sched dep):(sched dep):(alt):(dest):(EET):(FOB):(alt airport):(remarks) Placeholder details (VFR/IFR) V or I (acft type ) includes FAA prefixes/suffixes, if present; e.g. H/B77W/L (spd) Ground speed, in knots (sched dep) Scheduled departure; e.g. 2215 or 10:15pm Z (EET) Estimated enroute time; e.g. 1:37 (FOB) Fuel on board; e.g. 2:30 Flight plan packets are sent to all other clients on the server, even if not requested. On VATSIM, once such a packet has been received, the client acknowledges it (see \"Receipt of flight plan (VATSIM)\" under \"Text messages\" on this page).","title":"VATSIM"},{"location":"api/logoff/","text":"Logging off To log off, send one of the following packets below before closing the connection. ATC #DA(callsign):SERVER Pilot #DP(callsign):(network ID)","title":"Logging off"},{"location":"api/logoff/#logging-off","text":"To log off, send one of the following packets below before closing the connection.","title":"Logging off"},{"location":"api/logoff/#atc","text":"#DA(callsign):SERVER","title":"ATC"},{"location":"api/logoff/#pilot","text":"#DP(callsign):(network ID)","title":"Pilot"},{"location":"api/metar/","text":"Requesting a METAR Requests are prefixed with $AX : $AX(callsign):SERVER:METAR:(ICAO airport code) Server response: $ARserver:(callsign):METAR:(METAR contents) Note: METAR requests are handled by the server. They are not sent to other clients.","title":"METAR"},{"location":"api/metar/#requesting-a-metar","text":"Requests are prefixed with $AX : $AX(callsign):SERVER:METAR:(ICAO airport code) Server response: $ARserver:(callsign):METAR:(METAR contents) Note: METAR requests are handled by the server. They are not sent to other clients.","title":"Requesting a METAR"},{"location":"api/others/","text":"Other packets Server heartbeat The server will broadcast a heartbeat to all connected clients every 30 seconds: #DLSERVER:*:0:0 Challenge-response authentication (VATSIM) The server will, at unknown intervals, sends an authentication challenge ( $ZC ): $ZCSERVER:(callsign):(hash) (hash) is a hexadecimal string, with a length of anywhere between 8 and 22 digits (inclusive). The client must respond with the expected response ( $ZR ), within a predefined amount of time. Clients are booted from the network if this time limit is exceeded: $ZR(callsign):SERVER:(hash) (hash) is a 32-digit hexadecimal string. The mechanism of this authentication (i.e. the secret and/or hash function) is unknown. According to VATSIM forum threads, it appears that this feature may have been added in 2006. IVAO servers do not appear to utilize this form of authentication.","title":"Other packets"},{"location":"api/others/#other-packets","text":"","title":"Other packets"},{"location":"api/others/#server-heartbeat","text":"The server will broadcast a heartbeat to all connected clients every 30 seconds: #DLSERVER:*:0:0","title":"Server heartbeat"},{"location":"api/others/#challenge-response-authentication-vatsim","text":"The server will, at unknown intervals, sends an authentication challenge ( $ZC ): $ZCSERVER:(callsign):(hash) (hash) is a hexadecimal string, with a length of anywhere between 8 and 22 digits (inclusive). The client must respond with the expected response ( $ZR ), within a predefined amount of time. Clients are booted from the network if this time limit is exceeded: $ZR(callsign):SERVER:(hash) (hash) is a 32-digit hexadecimal string. The mechanism of this authentication (i.e. the secret and/or hash function) is unknown. According to VATSIM forum threads, it appears that this feature may have been added in 2006. IVAO servers do not appear to utilize this form of authentication.","title":"Challenge-response authentication (VATSIM)"},{"location":"api/packet/","text":"Overview Most packets roughly follow the format below: (command):(destination):(source):(data)\\r\\n command The name of the command. See each section for the commands. Each command is prefixed with one of the following: Symbol Details $ Requests and responses # Adding/removing clients, text messages % ATC update @ Aircraft update destination The destination of the packet. This may be any one of the following. Case does not seem to matter: DATA SERVER FP The callsign of an online station / aircraft The first three appear to be VATSIM-specific. source The sender of the packet. See destination for valid formats. data The content of the packet. See the following sections for valid formats.","title":"FSD packet"},{"location":"api/packet/#overview","text":"Most packets roughly follow the format below: (command):(destination):(source):(data)\\r\\n","title":"Overview"},{"location":"api/packet/#command","text":"The name of the command. See each section for the commands. Each command is prefixed with one of the following: Symbol Details $ Requests and responses # Adding/removing clients, text messages % ATC update @ Aircraft update","title":"command"},{"location":"api/packet/#destination","text":"The destination of the packet. This may be any one of the following. Case does not seem to matter: DATA SERVER FP The callsign of an online station / aircraft The first three appear to be VATSIM-specific.","title":"destination"},{"location":"api/packet/#source","text":"The sender of the packet. See destination for valid formats.","title":"source"},{"location":"api/packet/#data","text":"The content of the packet. See the following sections for valid formats.","title":"data"},{"location":"api/pos/","text":"Position updates Position updates are sent every 5 seconds. Pilots Pilot position updates are prefixed with @ : @(mode):(callsign):(squawk):(rating):(lat):(lon):(alt):(groundspeed):(num1):(num2) Transponder mode (mode) refers to the transponder mode. It consists of a single letter: Mode Description S Standby N Mode C Y Squawk ident Regardless of transponder mode, the altitude is always included in a position update. Squawk code A squawk code of 7500 (aircraft hijacking) will result in an immediate disconnection from the server. Unknown fields The meaning of the following fields is unclear: (num1) is a number of up to 10 digits. It seems to begin with 4. (num2) is an integer. There seems to be a wide range of values, anywhere between 1 and 3 digits, and can be positive or negative. ATC ATC updates are prefixed with % : %(callsign):(freq):(altitude):(protocol version):(rating):(lat):(lon) ATC stations and observers also have a location and altitude associated with them, even though they do not move throughout a session.","title":"Position updates"},{"location":"api/pos/#position-updates","text":"Position updates are sent every 5 seconds.","title":"Position updates"},{"location":"api/pos/#pilots","text":"Pilot position updates are prefixed with @ : @(mode):(callsign):(squawk):(rating):(lat):(lon):(alt):(groundspeed):(num1):(num2)","title":"Pilots"},{"location":"api/pos/#transponder-mode","text":"(mode) refers to the transponder mode. It consists of a single letter: Mode Description S Standby N Mode C Y Squawk ident Regardless of transponder mode, the altitude is always included in a position update.","title":"Transponder mode"},{"location":"api/pos/#squawk-code","text":"A squawk code of 7500 (aircraft hijacking) will result in an immediate disconnection from the server.","title":"Squawk code"},{"location":"api/pos/#unknown-fields","text":"The meaning of the following fields is unclear: (num1) is a number of up to 10 digits. It seems to begin with 4. (num2) is an integer. There seems to be a wide range of values, anywhere between 1 and 3 digits, and can be positive or negative.","title":"Unknown fields"},{"location":"api/pos/#atc","text":"ATC updates are prefixed with % : %(callsign):(freq):(altitude):(protocol version):(rating):(lat):(lon) ATC stations and observers also have a location and altitude associated with them, even though they do not move throughout a session.","title":"ATC"},{"location":"intro/defs/","text":"Definitions Term Definition Callsign The unique identifier that a client is logged in as; e.g. AAL123 , EGLL_TWR , XX_SUP , etc. Client A pilot or ATC station. For the purposes of FSD, observers are considered to be ATC stations. Client string A string identifying the client software. This is the FSD equivalent of user agent strings for browsers. Examples include Euroscope 3.2 , vPilot , etc. Frequency (freq) The network analogue to VHF frequencies used for aircraft radio communication. For the purposes of FSD, observers are always tuned to 199.998 MHz . Latitude (lat), longitude (lon) Latitude and longitude. They have a precision of 5 decimal places. Network ID A unique ID used by the network. For VATSIM, it is the CID; for IVAO, the VID. Protocol version The version of FSD being used by the client. As of the time of writing, VATSIM uses 100 , while IVAO uses B (all clients except IVAC 2) or C (IVAC 2). Rating The ATC or pilot rating, as assigned by the network. This is stored as an integer; the lowest rating is 1 . Examples: S1/C2/C3, AS3/ADC, FS3/SPP, etc. Server A FSD server. Packet A formatted unit of data sent over an FSD network. Placeholders are indicated using brackets; e.g. (client string) . Ratings Each user has a pilot and ATC rating. This is stored as an integer inside cert.txt on the server, but is advertised by IVAO and VATSIM under the following names: ATC ratings cert.txt value VATSIM rating IVAO rating 1 OBS 2 S1 AS1 3 S2 AS2 4 S3 AS3 5 C1 ADC 6 C2 7 C3 ACC 8 I1 9 I2 10 I3 11 SUP 12 ADM Pilot ratings cert.txt value VATSIM rating IVAO rating 1 No rating 2 FS1 3 FS2 4 FS3 5 PP 6 SPP 7 CP 8 ATP 9 SFI 10 11 P1","title":"Terms used"},{"location":"intro/defs/#definitions","text":"Term Definition Callsign The unique identifier that a client is logged in as; e.g. AAL123 , EGLL_TWR , XX_SUP , etc. Client A pilot or ATC station. For the purposes of FSD, observers are considered to be ATC stations. Client string A string identifying the client software. This is the FSD equivalent of user agent strings for browsers. Examples include Euroscope 3.2 , vPilot , etc. Frequency (freq) The network analogue to VHF frequencies used for aircraft radio communication. For the purposes of FSD, observers are always tuned to 199.998 MHz . Latitude (lat), longitude (lon) Latitude and longitude. They have a precision of 5 decimal places. Network ID A unique ID used by the network. For VATSIM, it is the CID; for IVAO, the VID. Protocol version The version of FSD being used by the client. As of the time of writing, VATSIM uses 100 , while IVAO uses B (all clients except IVAC 2) or C (IVAC 2). Rating The ATC or pilot rating, as assigned by the network. This is stored as an integer; the lowest rating is 1 . Examples: S1/C2/C3, AS3/ADC, FS3/SPP, etc. Server A FSD server. Packet A formatted unit of data sent over an FSD network. Placeholders are indicated using brackets; e.g. (client string) .","title":"Definitions"},{"location":"intro/defs/#ratings","text":"Each user has a pilot and ATC rating. This is stored as an integer inside cert.txt on the server, but is advertised by IVAO and VATSIM under the following names:","title":"Ratings"},{"location":"intro/defs/#atc-ratings","text":"cert.txt value VATSIM rating IVAO rating 1 OBS 2 S1 AS1 3 S2 AS2 4 S3 AS3 5 C1 ADC 6 C2 7 C3 ACC 8 I1 9 I2 10 I3 11 SUP 12 ADM","title":"ATC ratings"},{"location":"intro/defs/#pilot-ratings","text":"cert.txt value VATSIM rating IVAO rating 1 No rating 2 FS1 3 FS2 4 FS3 5 PP 6 SPP 7 CP 8 ATP 9 SFI 10 11 P1","title":"Pilot ratings"},{"location":"intro/gpl/","text":"GNU GENERAL PUBLIC LICENSE Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/ Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. Preamble The GNU General Public License is a free, copyleft license for software and other kinds of works. The licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users. We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors. You can apply it to your programs, too. When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things. To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights. Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others. For example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights. Developers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you legal permission to copy, distribute and/or modify it. For the developers' and authors' protection, the GPL clearly explains that there is no warranty for this free software. For both users' and authors' sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions. Some devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so. This is fundamentally incompatible with the aim of protecting users' freedom to change the software. The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable. Therefore, we have designed this version of the GPL to prohibit the practice for those products. If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users. Finally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary. To prevent this, the GPL assures that patents cannot be used to render the program non-free. The precise terms and conditions for copying, distribution and modification follow. TERMS AND CONDITIONS 0. Definitions. \"This License\" refers to version 3 of the GNU General Public License. \"Copyright\" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks. \"The Program\" refers to any copyrightable work licensed under this License. Each licensee is addressed as \"you\". \"Licensees\" and \"recipients\" may be individuals or organizations. To \"modify\" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a \"modified version\" of the earlier work or a work \"based on\" the earlier work. A \"covered work\" means either the unmodified Program or a work based on the Program. To \"propagate\" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well. To \"convey\" a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying. An interactive user interface displays \"Appropriate Legal Notices\" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion. 1. Source Code. The \"source code\" for a work means the preferred form of the work for making modifications to it. \"Object code\" means any non-source form of a work. A \"Standard Interface\" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language. The \"System Libraries\" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A \"Major Component\", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it. The \"Corresponding Source\" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work. The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source. The Corresponding Source for a work in source code form is that same work. 2. Basic Permissions. All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law. You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you. Conveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary. 3. Protecting Users' Legal Rights From Anti-Circumvention Law. No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures. When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures. 4. Conveying Verbatim Copies. You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program. You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee. 5. Conveying Modified Source Versions. You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions: a) The work must carry prominent notices stating that you modified it, and giving a relevant date. b) The work must carry prominent notices stating that it is released under this License and any conditions added under section 7. This requirement modifies the requirement in section 4 to \"keep intact all notices\". c) You must license the entire work, as a whole, under this License to anyone who comes into possession of a copy. This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regardless of how they are packaged. This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it. d) If the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so. A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an \"aggregate\" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate. 6. Conveying Non-Source Forms. You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways: a) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange. b) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either (1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or (2) access to copy the Corresponding Source from a network server at no charge. c) Convey individual copies of the object code with a copy of the written offer to provide the Corresponding Source. This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b. d) Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge. You need not require recipients to copy the Corresponding Source along with the object code. If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source. Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements. e) Convey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d. A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work. A \"User Product\" is either (1) a \"consumer product\", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, \"normally used\" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product. \"Installation Information\" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made. If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM). The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network. Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying. 7. Additional Terms. \"Additional permissions\" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions. When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission. Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms: a) Disclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or b) Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or c) Prohibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the original version; or d) Limiting the use for publicity purposes of names of licensors or authors of the material; or e) Declining to grant rights under trademark law for use of some trade names, trademarks, or service marks; or f) Requiring indemnification of licensors and authors of that material by anyone who conveys the material (or modified versions of it) with contractual assumptions of liability to the recipient, for any liability that these contractual assumptions directly impose on those licensors and authors. All other non-permissive additional terms are considered \"further restrictions\" within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying. If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms. Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way. 8. Termination. You may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11). However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation. Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice. Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10. 9. Acceptance Not Required for Having Copies. You are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so. 10. Automatic Licensing of Downstream Recipients. Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License. An \"entity transaction\" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts. You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it. 11. Patents. A \"contributor\" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor's \"contributor version\". A contributor's \"essential patent claims\" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, \"control\" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License. Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version. In the following three paragraphs, a \"patent license\" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To \"grant\" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party. If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. \"Knowingly relying\" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid. If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it. A patent license is \"discriminatory\" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007. Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law. 12. No Surrender of Others' Freedom. If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program. 13. Use with the GNU Affero General Public License. Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU Affero General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the special requirements of the GNU Affero General Public License, section 13, concerning interaction through a network will apply to the combination as such. 14. Revised Versions of this License. The Free Software Foundation may publish revised and/or new versions of the GNU General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU General Public License \"or any later version\" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU General Public License, you may choose any version ever published by the Free Software Foundation. If the Program specifies that a proxy can decide which future versions of the GNU General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program. Later license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version. 15. Disclaimer of Warranty. THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 16. Limitation of Liability. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. 17. Interpretation of Sections 15 and 16. If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee. END OF TERMS AND CONDITIONS How to Apply These Terms to Your New Programs If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms. To do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the \"copyright\" line and a pointer to where the full notice is found. <one line to give the program's name and a brief idea of what it does.> Copyright (C) <year> <name of author> This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <https://www.gnu.org/licenses/>. Also add information on how to contact you by electronic and paper mail. If the program does terminal interaction, make it output a short notice like this when it starts in an interactive mode: <program> Copyright (C) <year> <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. The hypothetical commands `show w' and `show c' should show the appropriate parts of the General Public License. Of course, your program's commands might be different; for a GUI interface, you would use an \"about box\". You should also get your employer (if you work as a programmer) or school, if any, to sign a \"copyright disclaimer\" for the program, if necessary. For more information on this, and how to apply and follow the GNU GPL, see https://www.gnu.org/licenses/ . The GNU General Public License does not permit incorporating your program into proprietary programs. If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library. If this is what you want to do, use the GNU Lesser General Public License instead of this License. But first, please read https://www.gnu.org/licenses/why-not-lgpl.html .","title":"License"},{"location":"intro/gpl/#gnu-general-public-license","text":"Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/ Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.","title":"GNU GENERAL PUBLIC LICENSE"},{"location":"intro/gpl/#preamble","text":"The GNU General Public License is a free, copyleft license for software and other kinds of works. The licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users. We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors. You can apply it to your programs, too. When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things. To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights. Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others. For example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights. Developers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you legal permission to copy, distribute and/or modify it. For the developers' and authors' protection, the GPL clearly explains that there is no warranty for this free software. For both users' and authors' sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions. Some devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so. This is fundamentally incompatible with the aim of protecting users' freedom to change the software. The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable. Therefore, we have designed this version of the GPL to prohibit the practice for those products. If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users. Finally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary. To prevent this, the GPL assures that patents cannot be used to render the program non-free. The precise terms and conditions for copying, distribution and modification follow.","title":"Preamble"},{"location":"intro/gpl/#terms-and-conditions","text":"","title":"TERMS AND CONDITIONS"},{"location":"intro/gpl/#0-definitions","text":"\"This License\" refers to version 3 of the GNU General Public License. \"Copyright\" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks. \"The Program\" refers to any copyrightable work licensed under this License. Each licensee is addressed as \"you\". \"Licensees\" and \"recipients\" may be individuals or organizations. To \"modify\" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a \"modified version\" of the earlier work or a work \"based on\" the earlier work. A \"covered work\" means either the unmodified Program or a work based on the Program. To \"propagate\" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well. To \"convey\" a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying. An interactive user interface displays \"Appropriate Legal Notices\" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.","title":"0. Definitions."},{"location":"intro/gpl/#1-source-code","text":"The \"source code\" for a work means the preferred form of the work for making modifications to it. \"Object code\" means any non-source form of a work. A \"Standard Interface\" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language. The \"System Libraries\" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A \"Major Component\", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it. The \"Corresponding Source\" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work. The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source. The Corresponding Source for a work in source code form is that same work.","title":"1. Source Code."},{"location":"intro/gpl/#2-basic-permissions","text":"All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law. You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you. Conveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary.","title":"2. Basic Permissions."},{"location":"intro/gpl/#3-protecting-users-legal-rights-from-anti-circumvention-law","text":"No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures. When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures.","title":"3. Protecting Users' Legal Rights From Anti-Circumvention Law."},{"location":"intro/gpl/#4-conveying-verbatim-copies","text":"You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program. You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.","title":"4. Conveying Verbatim Copies."},{"location":"intro/gpl/#5-conveying-modified-source-versions","text":"You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions: a) The work must carry prominent notices stating that you modified it, and giving a relevant date. b) The work must carry prominent notices stating that it is released under this License and any conditions added under section 7. This requirement modifies the requirement in section 4 to \"keep intact all notices\". c) You must license the entire work, as a whole, under this License to anyone who comes into possession of a copy. This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regardless of how they are packaged. This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it. d) If the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so. A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an \"aggregate\" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.","title":"5. Conveying Modified Source Versions."},{"location":"intro/gpl/#6-conveying-non-source-forms","text":"You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways: a) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange. b) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either (1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or (2) access to copy the Corresponding Source from a network server at no charge. c) Convey individual copies of the object code with a copy of the written offer to provide the Corresponding Source. This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b. d) Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge. You need not require recipients to copy the Corresponding Source along with the object code. If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source. Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements. e) Convey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d. A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work. A \"User Product\" is either (1) a \"consumer product\", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, \"normally used\" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product. \"Installation Information\" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made. If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM). The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network. Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.","title":"6. Conveying Non-Source Forms."},{"location":"intro/gpl/#7-additional-terms","text":"\"Additional permissions\" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions. When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission. Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms: a) Disclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or b) Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or c) Prohibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the original version; or d) Limiting the use for publicity purposes of names of licensors or authors of the material; or e) Declining to grant rights under trademark law for use of some trade names, trademarks, or service marks; or f) Requiring indemnification of licensors and authors of that material by anyone who conveys the material (or modified versions of it) with contractual assumptions of liability to the recipient, for any liability that these contractual assumptions directly impose on those licensors and authors. All other non-permissive additional terms are considered \"further restrictions\" within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying. If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms. Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.","title":"7. Additional Terms."},{"location":"intro/gpl/#8-termination","text":"You may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11). However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation. Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice. Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.","title":"8. Termination."},{"location":"intro/gpl/#9-acceptance-not-required-for-having-copies","text":"You are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.","title":"9. Acceptance Not Required for Having Copies."},{"location":"intro/gpl/#10-automatic-licensing-of-downstream-recipients","text":"Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License. An \"entity transaction\" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts. You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.","title":"10. Automatic Licensing of Downstream Recipients."},{"location":"intro/gpl/#11-patents","text":"A \"contributor\" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor's \"contributor version\". A contributor's \"essential patent claims\" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, \"control\" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License. Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version. In the following three paragraphs, a \"patent license\" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To \"grant\" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party. If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. \"Knowingly relying\" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid. If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it. A patent license is \"discriminatory\" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007. Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.","title":"11. Patents."},{"location":"intro/gpl/#12-no-surrender-of-others-freedom","text":"If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.","title":"12. No Surrender of Others' Freedom."},{"location":"intro/gpl/#13-use-with-the-gnu-affero-general-public-license","text":"Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU Affero General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the special requirements of the GNU Affero General Public License, section 13, concerning interaction through a network will apply to the combination as such.","title":"13. Use with the GNU Affero General Public License."},{"location":"intro/gpl/#14-revised-versions-of-this-license","text":"The Free Software Foundation may publish revised and/or new versions of the GNU General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU General Public License \"or any later version\" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU General Public License, you may choose any version ever published by the Free Software Foundation. If the Program specifies that a proxy can decide which future versions of the GNU General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program. Later license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.","title":"14. Revised Versions of this License."},{"location":"intro/gpl/#15-disclaimer-of-warranty","text":"THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.","title":"15. Disclaimer of Warranty."},{"location":"intro/gpl/#16-limitation-of-liability","text":"IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.","title":"16. Limitation of Liability."},{"location":"intro/gpl/#17-interpretation-of-sections-15-and-16","text":"If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee. END OF TERMS AND CONDITIONS","title":"17. Interpretation of Sections 15 and 16."},{"location":"intro/gpl/#how-to-apply-these-terms-to-your-new-programs","text":"If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms. To do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the \"copyright\" line and a pointer to where the full notice is found. <one line to give the program's name and a brief idea of what it does.> Copyright (C) <year> <name of author> This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <https://www.gnu.org/licenses/>. Also add information on how to contact you by electronic and paper mail. If the program does terminal interaction, make it output a short notice like this when it starts in an interactive mode: <program> Copyright (C) <year> <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. The hypothetical commands `show w' and `show c' should show the appropriate parts of the General Public License. Of course, your program's commands might be different; for a GUI interface, you would use an \"about box\". You should also get your employer (if you work as a programmer) or school, if any, to sign a \"copyright disclaimer\" for the program, if necessary. For more information on this, and how to apply and follow the GNU GPL, see https://www.gnu.org/licenses/ . The GNU General Public License does not permit incorporating your program into proprietary programs. If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library. If this is what you want to do, use the GNU Lesser General Public License instead of this License. But first, please read https://www.gnu.org/licenses/why-not-lgpl.html .","title":"How to Apply These Terms to Your New Programs"},{"location":"intro/legal/","text":"Disclaimer This is an unofficial document. While every attempt has been made to ensure its accuracy, it was produced without any cooperation from VATSIM or IVAO, and no agreements (including NDAs) were signed during its making. The protocol was reverse-engineered by inspecting incoming/outgoing packets during the course of a regular network connection. No security measures were broken; the protocol is in plaintext, and the details of authentication measures are not documented (nor were the measures themselves reverse engineered). This document is not an official approval to develop software for either network. To do so, you must get in touch with either network, and will likely have to sign an NDA and/or legal agreement to do so. Use this at your own risk! By using any software derived from this documentation, you accept responsibility in the event any action - legal or otherwise - is taken against you by IVAO and/or VATSIM. License The original FSD protocol is in public domain, and its source code can be found here . However, the modified versions used by VATSIM and IVAO (which are the main focus in this document) are under NDA, and are therefore closed-source. Please refer to the respective networks' policies ( IVAO , VATSIM ) regarding restrictions on the use of their FSD implementations. This document is licensed under the GPL, version 3 . Please see \"License\" under the \"Preface\" section for the full text.","title":"Legal"},{"location":"intro/legal/#disclaimer","text":"This is an unofficial document. While every attempt has been made to ensure its accuracy, it was produced without any cooperation from VATSIM or IVAO, and no agreements (including NDAs) were signed during its making. The protocol was reverse-engineered by inspecting incoming/outgoing packets during the course of a regular network connection. No security measures were broken; the protocol is in plaintext, and the details of authentication measures are not documented (nor were the measures themselves reverse engineered). This document is not an official approval to develop software for either network. To do so, you must get in touch with either network, and will likely have to sign an NDA and/or legal agreement to do so. Use this at your own risk! By using any software derived from this documentation, you accept responsibility in the event any action - legal or otherwise - is taken against you by IVAO and/or VATSIM.","title":"Disclaimer"},{"location":"intro/legal/#license","text":"The original FSD protocol is in public domain, and its source code can be found here . However, the modified versions used by VATSIM and IVAO (which are the main focus in this document) are under NDA, and are therefore closed-source. Please refer to the respective networks' policies ( IVAO , VATSIM ) regarding restrictions on the use of their FSD implementations. This document is licensed under the GPL, version 3 . Please see \"License\" under the \"Preface\" section for the full text.","title":"License"},{"location":"intro/overview/","text":"A high-level overview The purpose of packets Information is transmitted between clients and the server by means of packets . A packet is a single line of specially-formatted text that conforms to the FSD protocol. It serves a similar purpose to XML or JSON, in the sense that they also involve data and/or state transfer. However, keep in mind that FSD precedes either of these standards. Client workflow Connecting to the server Connect to the server. If the server is legitimate, the client identifies itself to the server.* Provide login details. * Only applies to VATSIM. \"Legitimate\" refers to the network that the client is meant to connect to. For instance, a client meant for VATSIM (e.g. vPilot) will not connect to a non-VATSIM FSD server. Send and receive data Provide position updates every 5 seconds. Receive packets, from either the server or other clients. If received packets indicate a request, respond to them. Disconnecting The client informs the server over FSD that it's disconnecting. Close the connection.","title":"Overview of FSD"},{"location":"intro/overview/#a-high-level-overview","text":"","title":"A high-level overview"},{"location":"intro/overview/#the-purpose-of-packets","text":"Information is transmitted between clients and the server by means of packets . A packet is a single line of specially-formatted text that conforms to the FSD protocol. It serves a similar purpose to XML or JSON, in the sense that they also involve data and/or state transfer. However, keep in mind that FSD precedes either of these standards.","title":"The purpose of packets"},{"location":"intro/overview/#client-workflow","text":"","title":"Client workflow"},{"location":"intro/overview/#connecting-to-the-server","text":"Connect to the server. If the server is legitimate, the client identifies itself to the server.* Provide login details. * Only applies to VATSIM. \"Legitimate\" refers to the network that the client is meant to connect to. For instance, a client meant for VATSIM (e.g. vPilot) will not connect to a non-VATSIM FSD server.","title":"Connecting to the server"},{"location":"intro/overview/#send-and-receive-data","text":"Provide position updates every 5 seconds. Receive packets, from either the server or other clients. If received packets indicate a request, respond to them.","title":"Send and receive data"},{"location":"intro/overview/#disconnecting","text":"The client informs the server over FSD that it's disconnecting. Close the connection.","title":"Disconnecting"},{"location":"intro/preface/","text":"Background FSD is a protocol first written in the 90s by Marty Bochane for SATCO (now VATSIM). Today's online networks, VATSIM and IVAO, have since made their own modifications to it. Owing to their shared history, many of them are shared, though it seems that VATSIM has made more. In any case, neither have publicly shared them, as they are locked down by NDAs imposed by the respective networks. The original FSD source code can be found here on GitHub . The actual protocol in use by both networks seems to depart quite a bit from the original documentation. It is unclear as to why basic functions (e.g. adding/removing clients) have been completely redefined using completely different \"keywords\". There are various sections involving what appears to be two-way authentication. The mechanism behind them is unknown, and is therefore undocumented below. It is likely that such sections are the main focus of network-specific NDAs. For all intents and purposes, IVAO's FSD implementation can be considered a subset of VATSIM's. VATSIM-unique implementations are indicated as appropriate. What this document covers This document covers all aspects of FSD that are in plaintext. In the case of VATSIM, this excludes server/client identification hashes, as well as the challenge-response authentication used by the network. Comparison with other modern protocols As for FSD, it's a pile of shit...it's basically a really REALLY badly implemented ircd. - Chris Collins , XSquawkbox developer ( source ) There are multiple areas where the FSD protocol (both original and VATSIM/IVAO-modified) breaks modern software engineering paradigms: Packets are in what is essentially an inconsistent comma-separated format. Packet definitions are inconsistent. Their use is also inconsistent. Lack of separation of concerns. Much of the information managed by FSD could be better served over a RESTful API and/or stored in a RDBMS, such as: Flight plans ATIS information METARs User registration Passwords are stored in a text file, in plain text, on the server named cert.txt (it is not a relational database). According to VATSIM staff , their implementation (which they call CERT) is encrypted, though it is likely not hashed due to the way authentication works in FSD. Irrelevant packets are sent to clients: ATC stations receive aircraft state data (e.g. state of control surfaces, landing gear etc.) Packets not requiring client response (e.g. addressed to other clients) are sent by the server","title":"Preamble"},{"location":"intro/preface/#background","text":"FSD is a protocol first written in the 90s by Marty Bochane for SATCO (now VATSIM). Today's online networks, VATSIM and IVAO, have since made their own modifications to it. Owing to their shared history, many of them are shared, though it seems that VATSIM has made more. In any case, neither have publicly shared them, as they are locked down by NDAs imposed by the respective networks. The original FSD source code can be found here on GitHub . The actual protocol in use by both networks seems to depart quite a bit from the original documentation. It is unclear as to why basic functions (e.g. adding/removing clients) have been completely redefined using completely different \"keywords\". There are various sections involving what appears to be two-way authentication. The mechanism behind them is unknown, and is therefore undocumented below. It is likely that such sections are the main focus of network-specific NDAs. For all intents and purposes, IVAO's FSD implementation can be considered a subset of VATSIM's. VATSIM-unique implementations are indicated as appropriate.","title":"Background"},{"location":"intro/preface/#what-this-document-covers","text":"This document covers all aspects of FSD that are in plaintext. In the case of VATSIM, this excludes server/client identification hashes, as well as the challenge-response authentication used by the network.","title":"What this document covers"},{"location":"intro/preface/#comparison-with-other-modern-protocols","text":"As for FSD, it's a pile of shit...it's basically a really REALLY badly implemented ircd. - Chris Collins , XSquawkbox developer ( source ) There are multiple areas where the FSD protocol (both original and VATSIM/IVAO-modified) breaks modern software engineering paradigms: Packets are in what is essentially an inconsistent comma-separated format. Packet definitions are inconsistent. Their use is also inconsistent. Lack of separation of concerns. Much of the information managed by FSD could be better served over a RESTful API and/or stored in a RDBMS, such as: Flight plans ATIS information METARs User registration Passwords are stored in a text file, in plain text, on the server named cert.txt (it is not a relational database). According to VATSIM staff , their implementation (which they call CERT) is encrypted, though it is likely not hashed due to the way authentication works in FSD. Irrelevant packets are sent to clients: ATC stations receive aircraft state data (e.g. state of control surfaces, landing gear etc.) Packets not requiring client response (e.g. addressed to other clients) are sent by the server","title":"Comparison with other modern protocols"}]}